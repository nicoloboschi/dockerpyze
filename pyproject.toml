[project]
name = "poetry-dockerize-plugin"
version = "1.4.0"
description = "Poetry application to Docker, automatically."
authors = [
    {name = "Nicolò Boschi", email = "boschi1997@gmail.com"}
]
maintainers = [
    {name = "Nicolò Boschi", email = "boschi1997@gmail.com"},
]
requires-python = ">=3.9,<4.0"
license = "MIT"
readme = "README.md"
keywords = ["poetry", "packaging", "docker"]
#repository = "https://github.com/nicoloboschi/poetry-dockerize-plugin"
#documentation = "https://github.com/nicoloboschi/poetry-dockerize-plugin"
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: System :: Archiving :: Packaging",
    "Topic :: System :: Installation/Setup",
    "Topic :: System :: Software Distribution",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "poetry-core>=1.8.1,<3",
    "docker>=7.1.0",
    "requests>=2.32.2",
    "python-dotenv>=1.0.1",

]

[project.scripts]
dockerize = "dockerize.builder:entrypoint"

[tool.uv]
package = true

[tool.poetry.plugins."poetry.application.plugin"]
dockerize = "dockerize.poetry_plugin:DockerApplicationPlugin"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.4"

[tool.dockerize]
entrypoint = ["uv", "run", "dockerize"]


[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s %(levelname)s %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"